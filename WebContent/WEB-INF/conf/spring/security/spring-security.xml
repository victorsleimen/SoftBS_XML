<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
    http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.0.xsd">

	<global-method-security secured-annotations="enabled" />
	
	<http auto-config="true" use-expressions="true">
		<custom-filter position="FORM_LOGIN_FILTER" ref="authenticationFilter" />
		<custom-filter after="FORM_LOGIN_FILTER" ref="credentialsFilter" />
		
		<intercept-url pattern="/welcome/**" access="permitAll" />
		<intercept-url pattern="/admin*" access="hasRole('ROLE_ADMIN')" />

		<form-login login-page="/popupLogin" 
			default-target-url="/admin"
			authentication-failure-url="/loginError" />
		<logout logout-success-url="/logout" logout-url="/j_spring_security_logout" />
		<csrf disabled="true" />
	</http>
	
	<authentication-manager alias="authenticationManager" erase-credentials="false">
		<authentication-provider ref="databaseAuthenticationProvider" />
		<!-- 
		<authentication-provider>
			<jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="select user_name, password, enabled from USERS where user_name = ?"
				authorities-by-username-query="select u.user_name, ur.authority from USERS u, USER_ROLES ur where u.user_id = ur.user_id and u.user_name = ? " />
		</authentication-provider>
		 -->
	</authentication-manager>

</beans:beans>